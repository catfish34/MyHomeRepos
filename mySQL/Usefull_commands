----------	DB instances	------------------------
mysql>show databases;

Show database name the default (current) database name:
mysql> select version(),user(),database();

----------	Connection tricks	------------------
mysql> -u DBUSERNAME -h DBSERVER -p DBNAME

----------	REPLICATION	----------------------------------
On master:
you need log name & position number:
cat /path/to/BACKUP-DIR/TIME_STAMNP/xtrabackup_binlog_pos_innodb

Starting slave:
start slave:  /etc/init.d/mysqld_XX  start
mysql>change master to master_log_file='XXXXXXX', master_log_pos=XXXXXX; 
start slave;
show slave status \G;

(!in v5.6)if you see error message related to the masters database binary log file 
in the status output, you can try to get more specific error:
shell> mysqlbinlog --verify-binlog-checksum Log_file_name 

It is possible to view the entire text of a running START SLAVE â€¦ statement, including any USER or PASSWORD values used, in the output of SHOW PROCESSLIST. This is also true for the text of a running CHANGE MASTER TO statement, including any values it employs for MASTER_USER or
MASTER_PASSWORD.
WEBINAR: http://www.percona.com/resources/mysql-videos/new-replication-features-mysql-56-benefits-limitations-and-challenges

-----------	INDEXING	---------------------------
Webinar:http://www.percona.com/resources/mysql-videos/mysql-indexing-best-practices-mysql-56

-----------	Privileges Necessary for MySQLDump	----------------------------
mysql>grant select, show view, trigger, lock tables, reload, file on *.* to 'backup_user'@'localhost';
flush privileges;
Links:http://patrickv.info/wordpress/2013/04/privileges-necessary-for-mysqldump/

-----------	SECURITY	------------------------
Sometimes you want to see who can access what. To check global-level privileges you can try:

    mysql> SELECT User,Host from mysql.user;

For multi instance grant /etc/init.d/mysqld script shutdown mysql 
mysql> GRANT SHUTDOWN ON *.* TO multi_admin@localhost IDENTIFIED BY 'passwd'


Allow subnet:
mysql> GRANT ALL PRIVILEGES ON *.* TO 'root'@'X.X.X.X/255.255.255.0';

---------	Server Status Variables	-------------------------
 SHOW [GLOBAL | SESSION] STATUS  \ SET ;

---------	 SHOW STATUS Syntax	--------------------------
SHOW [GLOBAL | SESSION] STATUS
    [LIKE 'pattern' | WHERE expr]

With the GLOBAL modifier, SHOW STATUS displays the status values for all connections to MySQL. 
With SESSION, it displays the status values for the current connection. If no modifier is present, 
the default is SESSION. LOCAL is a synonym for SESSION

--------	SHOW CURRENT PROCESSES	------------------
mysql> show full processlist;

-------- 	RENAME TABLE	----------------
RENAME TABLE tbl_name TO new_tbl_name

--------	Change user password	-------------
USE zabbix;
UPDATE users SET passwd=md5('newpassword') WHERE alias='Admin';

--------------- Fix broken replication    ---------------------------------------------------
just stop the slave using
mysql> stop slave;
Then set the global variable sql_slave_skip_counter to 1, for example:
mysql> set global sql_slave_skip_counter=1;
Then start the slave:
mysql> start slave;

So the problem there is that your slave appears to be already out of sync with your master. 
If the table in question on the master is static or mostly static, you could likely solve this by exporting the data from just that 
table on the master using mysqldump and loading it into the slave. If that is not possible, or you do not care about that 
data, you could always just skip the replication statement with sql_slave_skip_counter, but then the slave would be further 
out of sync with the master. And if all else fails, you can always rebuild the slave from the master as a last resort as well

-
DIFFERENT: http://www.percona.com/resources/mysql-videos
http://www.anchor.com.au/hosting/dedicated/MySQL_administration
