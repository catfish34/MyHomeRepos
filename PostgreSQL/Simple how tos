	DUMP database:
The idea behind the SQL-dump method is to generate a text file with 
SQL commands that, when fed back to the server, will recreate the database 
in the same state as it was at the time of the dump.
	shell>pg_dump  -h host and -p port dbname > outfile

Do dump a database directly from one server to another; for example:
	shell>pg_dump -h host1 dbname | psql -h host2 dbname

	Restore dump
	shell>psql dbname < infile

Reset user password:
shell>ALTER USER davide WITH PASSWORD 'hu8jmn3';
Grant user permissions:
GRANT all(select|update|delete) ON ALL TABLES IN SCHEMA public to user; 
grant all ON SCHEMA public to user;

WORK WITH psql command line utility:
\du -shows list of users and attributes
\q  - quit from psql

sudo -u postgres sh
shell>psql -l  - show database instances;
shell>psql instance_name - connect to a specific instance

--------------------------------------
	SECURITY
Each database system contains a file named  /var/lib/pgsql/data/pg_hba.conf,
in its PGDATA directory, which controls who can connect to each database.
Every client accessing a database must be covered by one of the entries in
pg_hba.conf. Otherwise all attempted connections from that client 
will be rejected with a "User authentication failed" error message.

PostgreSQL db server by default listen on localhost interface. change that:
grep listen /var/lib/pgsql/data/postgresql.conf
listen_addresses = '*'
---------------------------------------

Links: 
http://www.postgresql.org/docs/8.1/static/backup.html
http://www.postgresql.org/docs/8.0/static/sql-alteruser.html
---------------------------------------
Show tables:
\dt
SELECT * FROM pg_catalog.pg_tables
